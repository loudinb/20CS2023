# Hands-On: Create `User` Class

## `user` Module {.hide}

Create a new Python file named `user.py`. This file will contain the `User` class.

- At the top of the file, import the `datetime` module.

## `User` Class  {.hide}

Add a `User` class to the `user.py` file:

- Define the `User` class using the `def` keyword.
- Add an `__init__` method that takes `username` and `bio` as parameters and initializes the following attributes:
  
  - `username` (string)
  - `bio` (string)
  - `posts` (initialize as an empty list)
  - `join_date` (initialize to the current date and time using `datetime.now()`)

## `create_post` Method {.hide}

Add an instance method called `create_post`:

::: {.smaller-90}
  - Accept `image_url` (string) and `caption` (string) as parameters.
  - Create a dictionary representing the post with the following keys:
    
    - `image_url` (string)
    - `caption` (string)
    - `timestamp` (set to the current date and time using `datetime.now()`)
  - Append this dictionary to the `posts` list.
  - Return a string confirming post (e.g., "username posted: caption at YYYY-MM-DD HH:MM:SS").
:::

## `get_posts` Method {.hide}

Add an instance method called `get_posts`:

   - Define a method called `get_posts`.
   - Returns the list of posts.

## `get_join_date` Method {.hide}

Add an instance method called `get_join_date`:

   - Define a method called `get_join_date`.
   - Return the user's join date in a readable format (e.g., "Joined on: YYYY-MM-DD").
   
## Usage Example

```python
from user import User

# Create a user
user = User("bangbangnyc", "tattoo artist to the stars üåç")

# Create a post
post_confirmation = user.create_post("http://example.com/beach.jpg", "Sunset at the beach üåÖ")

# Get and print all posts
posts = user.get_posts()
for post in posts:
    print(f"Image: {post['image_url']}")
    print(f"Caption: {post['caption']}")
    print(f"Posted at: {post['timestamp'].strftime('%Y-%m-%d %H:%M:%S')}")
    print("---")

# Get joined date
print(user.get_join_date())
```