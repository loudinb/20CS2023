### Question 141 {.question}

We use dot notation to access both attributes and call methods on instances of classes.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] True
- [ ] False


::: {.explanation}
Dot notation is used in Python to access an object's attributes or to call its methods.
:::
:::
:::

### Question 142 {.question}

Choose all that apply: Which of the following can be used as dictionary keys?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Integers
- [ ] Strings
- [ ] Tuples
- [ ] Lists
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] Integers
- [x] Strings
- [x] Tuples
- [ ] Lists


::: {.explanation}
Dictionaries require immutable objects as keys. Integers, strings, and tuples are immutable, while lists are mutable and cannot be used as keys.
:::
:::
:::

### Question 143 {.question}

Which of the following is a class attribute in the following code?

```python
class Book:
    book_count = 0
    def __init__(self, title):
        self.title = title
        Book.book_count += 1
```

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `book_count`
- [ ] `title`
- [ ] `Book`
- [ ] `init`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] `book_count`
- [ ] `title`
- [ ] `Book`
- [ ] `init`


::: {.explanation}
`book_count` is a class attribute because it is defined directly on the class and shared across all instances.
:::
:::
:::

### Question 144 {.question}

Which of the following will result in a `TypeError`?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `"5" + "6"`
- [ ] `5 + 6`
- [ ] `"5" * 3`
- [ ] `"5" + 6`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `"5" + "6"`
- [ ] `5 + 6`
- [ ] `"5" * 3`
- [x] `"5" + 6`


::: {.explanation}
The expression `"5" + 6` will raise a `TypeError` because Python does not allow concatenation of a string and an integer without explicit conversion. The other operations are valid.
:::
:::
:::

### Question 145 {.question}

Fill in the missing parameter in the method definition.

```python
class Fungi:
    def add_fungus(_______, fungus_species):
        self.favorite_fungi[fungus_species] = "added"
```

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `fungi`
- [ ] `self`
- [ ] `cls`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `fungi`
- [x] `self`
- [ ] `cls`


::: {.explanation}
The first parameter of instance methods must be `self`, which refers to the current instance of the class.
:::
:::
:::

### Question 146 {.question}

A function that calls itself is called a(n) __________ function.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Looping
- [ ] Anonymous
- [ ] Recursive
- [ ] Inline
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Looping
- [ ] Anonymous
- [x] Recursive
- [ ] Inline


::: {.explanation}
A recursive function is one that calls itself to solve smaller instances of a problem.
:::
:::
:::

### Question 147 {.question}

Which of the following are iterable objects?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Lists
- [ ] Tuples
- [ ] Strings
- [ ] Dictionaries
- [ ] All of the above
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Lists
- [ ] Tuples
- [ ] Strings
- [ ] Dictionaries
- [x] All of the above


::: {.explanation}
Lists, tuples, strings, and dictionaries are all iterable objects in Python.
:::
:::
:::

### Question 148 {.question}

What is the result of the following code?

```python
numbers = [1, 2, 3, 4, 5]
print(numbers[1:4])
```

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `[1, 2, 3]`
- [ ] `[2, 3, 4]`
- [ ] `[2, 3]`
- [ ] `[1, 2, 3, 4]`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `[1, 2, 3]`
- [x] `[2, 3, 4]`
- [ ] `[2, 3]`
- [ ] `[1, 2, 3, 4]`


::: {.explanation}
The slice `numbers[1:4]` extracts elements from index 1 to 3 (excluding 4), resulting in `[2, 3, 4]`.
:::
:::
:::

### Question 149 {.question}

What is used to define a set in Python?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `{}`
- [ ] `()`
- [ ] `[]`
- [ ] `||`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] `{}`
- [ ] `()`
- [ ] `[]`
- [ ] `||`


::: {.explanation}
In Python, a set is defined using curly braces `{}`, while parentheses `()` are used for tuples and square brackets `[]` for lists.
:::
:::
:::

### Question 150 {.question}
A(n) ___________ is a collection of modules and packages that provide functionality which can be reused in multiple projects.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
Answer: 
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
Answer: `library`

::: {.explanation}
A library in Python is a collection of modules and packages that provide reusable functionality. Libraries can be built-in (like the standard library) or third-party, and they allow developers to extend Python's capabilities without having to write all the code from scratch.
:::
:::
:::

