### Question 91 {.question}

The Python keyword `assert` raises what exception?

::: {.r-stack}
::: {.absolute .left-0 .top-0 width=100%}
Answer: 
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
Answer: `AssertionError`

::: {.explanation}
The `assert` keyword in Python is used to test if a condition is true. If the condition is false, it raises an `AssertionError`. This is often used for debugging and testing purposes.
:::
:::
:::

### Question 92 {.question}

Global variables should be avoided because they can make code harder to maintain.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] True
- [ ] False


::: {.explanation}
Global variables can make code harder to maintain and debug because their values can be changed from anywhere in the program, leading to unpredictable behavior.
:::
:::
:::

### Question 93 {.question}

Which of the following is a mutable data type in Python?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `tuple`
- [ ] `str`
- [ ] `list`
- [ ] `int`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `tuple`
- [ ] `str`
- [x] `list`
- [ ] `int`


::: {.explanation}
The `list` data type is mutable, meaning its elements can be changed after the list is created. Other types like `tuple` and `str` are immutable.
:::
:::
:::

### Question 94 {.question}

Which of the following includes a syntax error?

::: {.r-stack}
::: {.absolute .left-0 .top-0 width=100%}
- [ ] `result = (2 + 3 * (4 - 1)`
- [ ] `if True`
- [ ] `result = base ^ exponent`
- [ ] `int("abc")`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] `result = (2 + 3 * (4 - 1)`
- [x] `if True`
- [ ] `result = base ^ exponent`
- [ ] `int("abc")`

::: {.explanation}
The first option has a missing closing parenthesis, and the second option is missing a colon after the if statement.
:::
:::
:::

### Question 95 {.question}

A class method is only called on an instance of a class.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] True
- [x] False


::: {.explanation}
Class methods can be called on both the class itself and its instances, making them more versatile than instance methods.
:::
:::
:::

### Question 96 {.question}

Which of the following expressions will return `True`?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `5 == "5"`
- [ ] `"Hello" == "hello"`
- [ ] `5 != 6`
- [ ] `3 >= 5`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `5 == "5"`
- [ ] `"Hello" == "hello"`
- [x] `5 != 6`
- [ ] `3 >= 5`


::: {.explanation}
The expression `5 != 6` is `True` because 5 is not equal to 6. All other expressions are `False` due to case sensitivity or mismatched types.
:::
:::
:::

### Question 97 {.question}

::: {.smaller-80}
What is the primary difference between the Python shell and IPython shell?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Python shell is faster than IPython
- [ ] Python shell has better syntax highlighting
- [ ] There is no difference; they are just different names for the same thing
- [ ] IPython offers more features like tab completion and magic commands
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Python shell is faster than IPython
- [ ] Python shell has better syntax highlighting
- [ ] There is no difference; they are just different names for the same thing
- [x] IPython offers more features like tab completion and magic commands


::: {.explanation}
IPython provides additional features such as enhanced introspection, tab completion, magic commands, and more, making it a more powerful interactive shell compared to the standard Python shell.
:::
:::
:::
:::

### Question 98 {.question}

Are dictionaries in Python accessed by index or key?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Index
- [ ] Key
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Index
- [x] Key


::: {.explanation}
Dictionaries in Python are accessed using keys, which are used to retrieve the associated values.
:::
:::
:::

### Question 99 {.question}

Is a class method or static method intended to be essentially a utility function?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Class method
- [ ] Static method
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Class method
- [x] Static method


::: {.explanation}
Static methods are utility functions that don’t operate on class or instance data but are called in a class’s namespace.
:::
:::
:::

### Question 100 {.question}

Give one example of a higher-order function that takes other functions as arguments.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `map()`
- [ ] `max()`
- [ ] `print()`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] `map()`
- [ ] `max()`
- [ ] `print()`


::: {.explanation}
The `map()` function is a higher-order function that takes another function as an argument and applies it to all items in an iterable.
:::
:::
:::

