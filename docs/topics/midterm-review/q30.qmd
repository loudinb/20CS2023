### Question 31 {.question}

A class can inherit from multiple parent classes.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] True
- [ ] False


::: {.explanation}
Python supports multiple inheritance, allowing a class to inherit from more than one parent class.
:::
:::
:::

### Question 32 {.question}

We _________ objects from a class to create concrete instances with specific attribute values.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] instantiate
- [ ] concatenate
- [ ] interpret
- [ ] syscall
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] instantiate
- [ ] concatenate
- [ ] interpret
- [ ] syscall


::: {.explanation}
To create a concrete instance of a class, we instantiate the class, assigning specific values to the object's attributes.
:::
:::
:::

### Question 33 {.question}

You can manually raise exceptions using the `_______` keyword.

::: {.r-stack}
::: {.absolute .left-0 .top-0 width=100%}
Answer:
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
Answer: `raise`

::: {.explanation}
The `raise` keyword is used to manually raise exceptions in Python. For example: `raise ValueError("Invalid input")`
:::
:::
:::

### Question 34 {.question}

What keyword is preferred to be used when we open files?

::: {.r-stack}
::: {.absolute .left-0 .top-0 width=100%}
- [ ] with
- [ ] try
- [ ] close
- [ ] unzip
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] with
- [ ] try
- [ ] close
- [ ] unzip

::: {.explanation}
The `with` keyword is preferred when opening files in Python. It ensures that the file is properly closed after we're done with it, even if an exception occurs. This is known as the context manager protocol.
:::
:::
:::

### Question 35 {.question}

Attributes specified in the class declaration are called ______ attributes.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Instance
- [ ] Local
- [ ] Class
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Instance
- [ ] Local
- [x] Class


::: {.explanation}
Attributes defined within a class but outside of any methods are known as class attributes. These attributes are shared across all instances of the class.
:::
:::
:::

### Question 36 {.question}

A closure is formed when an inner function is defined within an outer function. True or False?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] True
- [ ] False


::: {.explanation}
In Python, a closure occurs when an inner function is defined inside an outer function and the inner function retains access to the variables in the outer function's scope.
:::
:::
:::

### Question 37 {.question}

When defining a function, the input variables are called the __________ of the function.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Arguments
- [ ] Parameters
- [ ] Inputs
- [ ] Variables
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Arguments
- [x] Parameters
- [ ] Inputs
- [ ] Variables


::: {.explanation}
Parameters are the input variables defined in the function signature, while arguments are the actual values passed to the function when it is called.
:::
:::
:::

### Question 38 {.question}

Do static methods have a standard first parameter like instance and class methods? If so, which of the following?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] No parameters are passed to static methods.
- [ ] `self`
- [ ] `cls`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] No parameters are passed to static methods.
- [ ] `self`
- [ ] `cls`


::: {.explanation}
Static methods do not require parameters like `self` or `cls` since they donâ€™t operate on instance or class data.
:::
:::
:::

### Question 39 {.question}

Which of the following functions returns the largest value from a list of numbers?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `sum()`
- [ ] `max()`
- [ ] `largest()`
- [ ] `greater()`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `sum()`
- [x] `max()`
- [ ] `largest()`
- [ ] `greater()`


::: {.explanation}
The `max()` function returns the largest value in a list or any iterable. The other options do not exist or serve a different purpose in Python.
:::
:::
:::

### Question 40 {.question}

This is an example of passing arguments by __________.

```python
def mess(name, message):
    print(f"To {name}, {message}")

mess(message="Happy Fall", name="You")
```

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Position
- [ ] Keyword
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Position
- [x] Keyword


::: {.explanation}
In this example, arguments are passed by keyword (e.g., `message="Happy Fall"`, `name="You"`).
:::
:::
:::

