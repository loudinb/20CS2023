### Question 101 {.question}

True or False: `True` and `False` are subclasses of `int` in Python.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] True
- [ ] False


::: {.explanation}
In Python, `True` and `False` are actually instances of `int`, where `True` is equivalent to `1` and `False` is equivalent to `0`.
:::
:::
:::

### Question 102 {.question}

You can only define a method once in a subclass that already exists in the superclass.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] True
- [x] False


::: {.explanation}
A method in a subclass can override the one defined in the superclass, allowing customization of inherited behavior.
:::
:::
:::

### Question 103 {.question}

Which statement expresses that a function maps elements from the domain to the range?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `f: D→R`
- [ ] `f(D,R)`
- [ ] `f: D==R`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] `f: D→R`
- [ ] `f(D,R)`
- [ ] `f: D==R`


::: {.explanation}
The mathematical notation `f: D→R` indicates that the function `f` maps elements from the domain `D` to the range `R`.
:::
:::
:::

### Question 104 {.question}

The below code checks if `x` is ________.

```python
x % 2 == 0
```

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Odd
- [ ] Even
- [ ] Prime
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Odd
- [x] Even
- [ ] Prime


::: {.explanation}
The code `x % 2 == 0` checks if a number `x` is divisible by 2, which means it is even.
:::
:::
:::

### Question 105 {.question}

You can access the docstring of a function using the __________ attribute.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `__help__`
- [ ] `__doc__`
- [ ] `__info__`
- [ ] `__desc__`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `__help__`
- [x] `__doc__`
- [ ] `__info__`
- [ ] `__desc__`


::: {.explanation}
In Python, the `__doc__` attribute holds the docstring of a function, class, or module, providing an explanation of its purpose.
:::
:::
:::

### Question 106 {.question}

Which of the following methods modify a list in place? (Select all that apply)

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `sort()`
- [ ] `reverse()`
- [ ] `append()`
- [ ] `extend()`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] `sort()`
- [x] `reverse()`
- [x] `append()`
- [x] `extend()`


::: {.explanation}
All of these methods—`sort()`, `reverse()`, `append()`, and `extend()`—modify the list in place without creating a new list object.
:::
:::
:::

### Question 107 {.question}

Which of the following is **not** a purpose of Python decorators?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Add functionality
- [ ] Increase readability
- [ ] Make my program pretty
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Add functionality
- [ ] Increase readability
- [x] Make my program pretty


::: {.explanation}
Decorators in Python are used to add functionality to existing functions or methods without modifying their code. They do not impact the appearance of your program.
:::
:::
:::

### Question 108 {.question}

Which of the following is an example of a **constant** in Python, by convention?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `Total_Score`
- [ ] `PI`
- [ ] `maxScore`
- [ ] `snake_case`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `Total_Score`
- [x] `PI`
- [ ] `maxScore`
- [ ] `snake_case`


::: {.explanation}
By convention, constants in Python are written in all uppercase letters. `PI` is an example of a constant.
:::
:::
:::

### Question 109 {.question}

Which of the following methods is not available for frozen sets?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `intersection()`
- [ ] `union()`
- [ ] `add()`
- [ ] `is_subset()`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `intersection()`
- [ ] `union()`
- [x] `add()`
- [ ] `is_subset()`


::: {.explanation}
Frozen sets are immutable, so methods that modify the set, like `add()`, are not available.
:::
:::
:::

### Question 110 {.question}

::: {.smaller-75}
Match the term to the definition:

**Term**:

- Attributes
- Methods

**Meaning**:

- Functions that operate on the object’s data (behavior)
- Data associated with an object

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Functions that operate on the object’s data (behavior); Data associated with an object
- [ ] Data associated with an object; Functions that operate on the object’s data (behavior)
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Functions that operate on the object’s data (behavior); Data associated with an object
- [x] Data associated with an object; Functions that operate on the object’s data (behavior)


::: {.explanation}
Attributes represent the data held by an object, while methods are the functions that operate on this data and define the object's behavior.
:::
:::
:::
:::
