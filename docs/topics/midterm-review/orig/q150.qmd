### Question 151 {.question}

Which of the following are true about class attributes? (Select all that apply)

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Attributes are shared by all instances of a class.
- [ ] They are always accessed with `get()`.
- [ ] They are defined with the methods of the class.
- [ ] They are defined within the class construction but outside of any method definitions.
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] Attributes are shared by all instances of a class.
- [ ] They are always accessed with `get()`.
- [ ] They are defined with the methods of the class.
- [x] They are defined within the class construction but outside of any method definitions.


::: {.explanation}
Class attributes are shared by all instances of a class and are defined within the class but outside of any methods.
:::
:::
:::

### Question 152 {.question}

When calling a function, what term is used to describe the values passed to the function when it is called?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Arguments
- [ ] Parameters
- [ ] Inputs
- [ ] Values
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] Arguments
- [ ] Parameters
- [ ] Inputs
- [ ] Values


::: {.explanation}
Arguments are the actual values passed into the function when it is called. Parameters are the placeholders used in the function definition.
:::
:::
:::

### Question 153 {.question}

Which of the following will convert the string `"123"` to an integer in Python?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `int("123")`
- [ ] `float("123")`
- [ ] `str("123")`
- [ ] `eval("123")`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] `int("123")`
- [ ] `float("123")`
- [ ] `str("123")`
- [ ] `eval("123")`


::: {.explanation}
The `int()` function converts the string `"123"` to an integer. The other methods either convert to a different type or evaluate a string as Python code, which is unnecessary here.
:::
:::
:::

### Question 154 {.question}

You use the decorator, `@___________`, to denote static methods.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `staticmethod`
- [ ] `classmethod`
- [ ] `initmethod`
- [ ] `property`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] `staticmethod`
- [ ] `classmethod`
- [ ] `initmethod`
- [ ] `property`


::: {.explanation}
The `@staticmethod` decorator is used to denote static methods, which do not access instance or class-level attributes.
:::
:::
:::

### Question 155 {.question}

What will be the result of the following code?

```python
numbers = [1, 2, 3, 4, 5]
numbers.clear()
print(numbers)
```

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `[1, 2, 3, 4, 5]`
- [ ] `[1]`
- [ ] `None`
- [ ] `[]`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `[1, 2, 3, 4, 5]`
- [ ] `[1]`
- [ ] `None`
- [x] `[]`


::: {.explanation}
The `clear()` method removes all elements from the list, leaving it empty (`[]`).
:::
:::
:::

### Question 156 {.question}

This is an example of passing arguments by __________.

```python
def mess(name, message):
    print(f"To {name}, {message}")

mess(message="Happy Fall", name="You")
```

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Position
- [ ] Keyword
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Position
- [x] Keyword


::: {.explanation}
In this example, arguments are passed by keyword (e.g., `message="Happy Fall"`, `name="You"`).
:::
:::
:::

### Question 157 {.question}

Which of the following are included in the base Python installation? (Select all that apply)

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Jupyter Notebook
- [ ] IPython
- [ ] Python shell
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Jupyter Notebook
- [ ] IPython
- [x] Python shell


::: {.explanation}
The base Python installation includes the standard Python shell but not IPython or Jupyter Notebook. These tools need to be installed separately.
:::
:::
:::

### Question 158 {.question}

Passing mutable input arguments to a function and changing them inside the function can change them outside the function too.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] True
- [ ] False


::: {.explanation}
When mutable objects like lists or dictionaries are passed to a function, modifications inside the function can affect the object outside the function.
:::
:::
:::

### Question 159 {.question}

What keyword is used to indicate we are defining a function?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `fun`
- [ ] `function`
- [ ] `define`
- [ ] `def`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `fun`
- [ ] `function`
- [ ] `define`
- [x] `def`


::: {.explanation}
The `def` keyword is used in Python to define a function.
:::
:::
:::

### Question 160 {.question}

All methods and attributes of the parent class are inherited by the subclasses as long as they are not overridden.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] True
- [ ] False


::: {.explanation}
Subclasses inherit all methods and attributes from the parent class unless they are explicitly overridden in the subclass.
:::
:::
:::

