### Question 161 {.question}

You can pass functions as arguments, rename them, or delete them. 

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] True
- [ ] False


::: {.explanation}
In Python, functions are first-class objects, meaning they can be passed as arguments to other functions, renamed, or even deleted.
:::
:::
:::

### Question 162 {.question}

Lists can store elements of only one type. True or False?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] True
- [x] False


::: {.explanation}
Lists in Python can store elements of different types, including numbers, strings, and even other lists.
:::
:::
:::

### Question 163 {.question}

What operator is used to unpack a list or tuple?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `&`
- [ ] `*`
- [ ] `@`
- [ ] `#`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `&`
- [x] `*`
- [ ] `@`
- [ ] `#`


::: {.explanation}
The `*` operator is used to unpack lists or tuples in Python, for example, `*args` for unpacking arguments.
:::
:::
:::

### Question 164 {.question}

::: {.smaller-80}
Select the correct statement regarding class methods:

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Class methods are always bound to the class and can be called on both the class and its instances
- [ ] Class methods are unbound and can only be called on the class itself, not on instances
- [ ] Class methods are bound to instances and can only be called on instances of the class
- [ ] Class methods are dynamically bound at runtime and can change their binding
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] Class methods are always bound to the class and can be called on both the class and its instances
- [ ] Class methods are unbound and can only be called on the class itself, not on instances
- [ ] Class methods are bound to instances and can only be called on instances of the class
- [ ] Class methods are dynamically bound at runtime and can change their binding

::: {.explanation}
Class methods are bound to the class, meaning they can be called on both the class itself and instances of the class. They are defined using the `@classmethod` decorator.
:::
:::
:::
:::

### Question 165 {.question}

Which of the following methods can be used to add an element to the end of a list?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `insert()`
- [ ] `append()`
- [ ] `extend()`
- [ ] `push()`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `insert()`
- [x] `append()`
- [ ] `extend()`
- [ ] `push()`


::: {.explanation}
The `append()` method adds a single element to the end of a list. The `extend()` method adds all elements from an iterable, while `insert()` inserts an element at a specific index.
:::
:::
:::

### Question 166 {.question}

What is this type of evaluation between `x` and `y` called?

```python
x = 1
y = 1
if x and y:
    print("both true")
```

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Short-circuit evaluation
- [ ] Shortcut evaluation
- [ ] Lazy evaluation
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] Short-circuit evaluation
- [ ] Shortcut evaluation
- [ ] Lazy evaluation


::: {.explanation}
Short-circuit evaluation means that the second condition is evaluated only if the first condition is not enough to determine the result.
:::
:::
:::

### Question 167 {.question}

Are dictionaries in Python accessed by index or key?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Index
- [ ] Key
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Index
- [x] Key


::: {.explanation}
Dictionaries in Python are accessed using keys, which are used to retrieve the associated values.
:::
:::
:::

### Question 168 {.question}

Is a class method or static method intended to be essentially a utility function?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Class method
- [ ] Static method
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Class method
- [x] Static method


::: {.explanation}
Static methods are utility functions that don’t operate on class or instance data but are called in a class’s namespace.
:::
:::
:::

### Question 169 {.question}

What will be the result of the following code?

```python
text = "  Python  "
print(text.strip())
```

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `"  Python  "`
- [ ] `"Python"`
- [ ] `"  Python"`
- [ ] `"Python  "`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `"  Python  "`
- [x] `"Python"`
- [ ] `"  Python"`
- [ ] `"Python  "`


::: {.explanation}
The `strip()` method removes leading and trailing whitespace, so `"  Python  "` becomes `"Python"`.
:::
:::
:::

### Question 170 {.question}

Can you access a tuple element by index?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Yes
- [ ] No
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] Yes
- [ ] No


::: {.explanation}
Yes, tuple elements can be accessed by index in the same way as list elements.
:::
:::
:::

