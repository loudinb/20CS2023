### Question 71 {.question}

What statement should be used to prevent an infinite `while` loop?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `stop`
- [ ] `halt`
- [ ] `break`
- [ ] `continue`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `stop`
- [ ] `halt`
- [x] `break`
- [ ] `continue`


::: {.explanation}
The `break` statement is used to exit a `while` loop prematurely, preventing it from becoming infinite.
:::
:::
:::

### Question 72 {.question}

Which of the following are considered `False` in Python?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `0`
- [ ] `set()`
- [ ] `1`
- [ ] `None`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] `0`
- [x] `set()`
- [ ] `1`
- [x] `None`


::: {.explanation}
In Python, `0`, `set()`, and `None` are considered `False` in boolean contexts, while `1` is `True`.
:::
:::
:::

### Question 73 {.question}

We use dot notation to access both attributes and call methods on instances of classes.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] True
- [ ] False


::: {.explanation}
Dot notation is used in Python to access an object's attributes or to call its methods.
:::
:::
:::

### Question 74 {.question}

We _________ objects from a class to create concrete instances with specific attribute values.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] instantiate
- [ ] concatenate
- [ ] interpret
- [ ] syscall
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] instantiate
- [ ] concatenate
- [ ] interpret
- [ ] syscall


::: {.explanation}
To create a concrete instance of a class, we instantiate the class, assigning specific values to the object's attributes.
:::
:::
:::

### Question 75 {.question}

Arguments are passed by assignment, meaning a _________ to the object is passed to the function.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] reference
- [ ] copy
- [ ] pointer
- [ ] object
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] reference
- [ ] copy
- [ ] pointer
- [ ] object


::: {.explanation}
In Python, arguments are passed by assignment, which means that the reference to the object is passed to the function.
:::
:::
:::

### Question 76 {.question}

The number of levels passed by the execution of a recursive function is called the __________ __________.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Call stack
- [ ] Depth level
- [ ] Execution count
- [ ] Recursion depth
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Call stack
- [ ] Depth level
- [ ] Execution count
- [x] Recursion depth


::: {.explanation}
Recursion depth refers to how deep the function calls go during the execution of a recursive function.
:::
:::
:::

### Question 77 {.question}

::: {.smaller-80}
Match the following to their purpose:

- `*args`
- `**kwargs`

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Collects keyword arguments; Collects positional arguments
- [ ] Collects positional arguments; Collects keyword arguments
- [ ] Collects arguments; Ignores arguments
- [ ] Ignores all arguments; Collects arguments
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] Collects keyword arguments; Collects positional arguments
- [x] Collects positional arguments; Collects keyword arguments
- [ ] Collects arguments; Ignores arguments
- [ ] Ignores all arguments; Collects arguments


::: {.explanation}
In Python, `*args` collects a variable number of positional arguments, while `**kwargs` collects keyword arguments.
:::
:::
:::
:::

### Question 78 {.question}

In inheritance, the new class (subclass) inherits attributes and methods from the existing class, called the _________.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] superclass
- [ ] submethod
- [ ] metaclass
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] superclass
- [ ] submethod
- [ ] metaclass


::: {.explanation}
The superclass (also known as the parent class) provides the attributes and methods that the subclass inherits.
:::
:::
:::

### Question 79 {.question}

What is used to define a set in Python?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `{}`
- [ ] `()`
- [ ] `[]`
- [ ] `||`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] `{}`
- [ ] `()`
- [ ] `[]`
- [ ] `||`


::: {.explanation}
In Python, a set is defined using curly braces `{}`, while parentheses `()` are used for tuples and square brackets `[]` for lists.
:::
:::
:::

### Question 80 {.question}

In Python, functions are __________.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] Objects
- [ ] Articles
- [ ] Things
- [ ] Items
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] Objects
- [ ] Articles
- [ ] Things
- [ ] Items


::: {.explanation}
In Python, functions are first-class objects, meaning they can be passed as arguments, returned from other functions, and assigned to variables.
:::
:::
:::

