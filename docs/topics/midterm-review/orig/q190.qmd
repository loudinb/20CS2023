### Question 191 {.question}

What is the result of the following code?

```python
numbers = [10, 20, 30]
numbers.append(40)
print(numbers)
```

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `[10, 20]`
- [ ] `[10, 20, 30]`
- [x] `[10, 20, 30, 40]`
- [ ] `[40, 10, 20, 30]`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `[10, 20]`
- [ ] `[10, 20, 30]`
- [x] `[10, 20, 30, 40]`
- [ ] `[40, 10, 20, 30]`


::: {.explanation}
The `append()` method adds `40` to the end of the list, so the result is `[10, 20, 30, 40]`.
:::
:::
:::

### Question 192 {.question}

Both class attributes and instance attributes can be modified in class methods.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] True
- [ ] False


::: {.explanation}
Class methods can modify both class attributes and instance attributes by accessing them via the `cls` and `self` parameters, respectively.
:::
:::
:::

### Question 193 {.question}

Sets in Python can contain all kinds of immutable objects (numeric objects, strings, and Booleans).

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] True
- [ ] False


::: {.explanation}
Sets in Python can contain immutable objects such as numbers, strings, and Booleans. However, they cannot contain mutable objects like lists.
:::
:::
:::

### Question 194 {.question}

A class method is only called on an instance of a class.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] True
- [x] False


::: {.explanation}
Class methods can be called on both the class itself and its instances, making them more versatile than instance methods.
:::
:::
:::

### Question 195 {.question}

What is the result of the following code?

```python
text = "Python Programming"
print(text.find("Prog"))
```

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `0`
- [ ] `7`
- [ ] `-1`
- [ ] `None`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] `0`
- [x] `7`
- [ ] `-1`
- [ ] `None`


::: {.explanation}
The `find()` method returns the index of the first occurrence of the substring `"Prog"` in `"Python Programming"`, which starts at index 7.
:::
:::
:::

### Question 196 {.question}

A class can inherit from multiple superclasses.

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] True
- [ ] False
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] True
- [ ] False


::: {.explanation}
Python supports multiple inheritance, allowing a class to inherit from more than one superclass.
:::
:::
:::

### Question 197 {.question}

What is a `.pyc` file?

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] A Python script file
- [ ] A bytecode-compiled file generated by the Python interpreter
- [ ] A Python configuration file
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [ ] A Python script file
- [x] A bytecode-compiled file generated by the Python interpreter
- [ ] A Python configuration file


::: {.explanation}
A `.pyc` file is a bytecode-compiled version of a Python script, which allows the interpreter to execute the code faster by skipping the compilation step in subsequent runs.
:::
:::
:::

### Question 198 {.question}

Fill in the indices that will return the first element of the third row from the following matrix:

```python
matrix = [[9, 0, 1], [3, 3, 2], [7, 8, 3]]
```

::: {.r-stack}

::: {.absolute .left-0 .top-0 width=100%}
- [ ] `matrix[2][0]`
- [ ] `matrix[0][2]`
- [ ] `matrix[1][0]`
- [ ] `matrix[0][0]`
:::

::: {.fragment .fade-in .absolute .left-0 .top-0 width=100%}
- [x] `matrix[2][0]`
- [ ] `matrix[0][2]`
- [ ] `matrix[1][0]`
- [ ] `matrix[0][0]`


::: {.explanation}
To access the first element of the third row (`[7, 8, 3]`), you use `matrix[2][0]`, which returns `7`.
:::
:::
:::

